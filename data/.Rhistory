setwd("~/Desktop/MechaCar_Statistical_Analysis")
setwd("~/Desktop/MechaCar_Statistical_Analysis/data")
library(dplyr)
mpg_table <- read.csv(file='MechaCar_mpg.csv', check.names=F, stringsAsFactors = F)
View(mpg_table)
# Perform linear regression
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mpg_table)
# Perform linear regression
lin_reg <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mpg_table)
summary(lin_reg)
# Read in the Suspension_Coil.csv file to dataframe
psi_table <- read.csv(file='Suspension_Coil.csv', check.names=F, stringsAsFactors = F)
View(psi_table)
summarize(psi_table)
?summarize()
summarize(.psi_table)
summarize(psi_table, Mean=mean(PSI), Median=median(PSI), Variance=var(PIS), SD=sd(PSI))
summarize(psi_table, Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
total_summary <- summarize(psi_table, Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
View(total_summary)
# Create lot_summary dataframe
group_by(Manufacturing_lot) %>% summarize(psi_table, Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
# Create lot_summary dataframe
group_by(Manufacturing_Lot) %>% summarize(psi_table, Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
# Create lot_summary dataframe
group_by(psi_table, Manufacturing_Lot) %>% summarize(psi_table, Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
# Create lot_summary dataframe
group_by(psi_table$Manufacturing_Lot) %>% summarize(psi_table, Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
# Create lot_summary dataframe
group_by(psi_table$Manufacturing_Lot) %>% summarize(psi_table, Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI), .groups='keep')
# Create lot_summary dataframe
psi_table %>% group_by(Manufacturing_Lot) %>% summarize(psi_table, Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI), .groups='keep')
# Create lot_summary dataframe
psi_table %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI), .groups='keep')
# Create lot_summary dataframe
lot_summary <- psi_table %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI), .groups='keep')
View(lot_summary)
# Create linear regression model
model <- (lin_reg)
View(model)
yvals <- model$coefficients['mpg']*mpg_table$mpg + model$coefficients['(Intercept)']
model[["coefficients"]]
plt <- ggplot(mpg_table, aes(x=mpg, y=vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD))
plt <- ggplot(mpg_table, aes(x=mpg, y=yvals))
plt <- ggplot(mpg_table, aes(x=mpg, y=vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD))
library(tidyverse)
plt <- ggplot(mpg_table, aes(x=mpg, y=vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD))
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
yvals <-model$coefficients['(Intercept)']
plt <- ggplot(mpg_table, aes(x=mpg, y=vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD))
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
# Create box plot
plt <- ggplot(psi_table, aes(y=PSI))
plt + geom_boxplot()
# Create box plot
plt <- ggplot(psi_table, aes(x=Manufacturing_Lot, y=PSI))
plt + geom_boxplot()
yvals <- model$coefficients['mpg']*mpg_tale$mpg + model$coefficients
yvals <- model$coefficients['mpg']*mpg_table$mpg + model$coefficients
yvals <- model$coefficients['mpg']*mpg_table$mpg + model$coefficients['(Intercept)']
yvals <- model$coefficients['mpg'] + model$coefficients['(Intercept)']
yvals <- model$coefficients['(Intercept)']
plt <- ggplot(mpg_table, aes(x=mpg, y=vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD))
plt + geom_point() + geom_line(aes(y=yvals), color = "red")
yvals <- mpg_table$mpg + model$coefficients['(Intercept)']
plt <- ggplot(mpg_table, aes(x=mpg, y=vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD))
plt + geom_point() + geom_line(aes(y=yvals), color = "red")
